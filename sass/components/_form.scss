@use "../abstracts/index" as *;

/* IMPORTANT: 
the radio buttons that are styled, which are basically replaced, become inaccessible
to keyboard users because the spacebar doesn't work on that. 
One possible solution for this problem is to use JS to listen for keydown
events that match the spacebar and add the checked class to the appropriate 
hidden button. We should always plan for accessibility and be aware of their 
issues that might arise with some styling */

.form {
  &__group:not(:last-child) {
    margin-bottom: 2rem;
  }

  &__input {
    width: 90%;
    display: block;
    font-family: inherit;
    color: inherit;
    font-size: 1.5rem;
    padding: 1.6rem 2rem;
    border-radius: 2px;
    background-color: rgba($color-white, 0.6);
    border: none;
    transition: all 0.3s;

    //so that we can not see the transaction to focus on margins
    border-bottom: 3px solid transparent;

    @include responsive(tab-portrait) {
      width: 100%;
    }

    &:focus {
      outline: none;
      //always make the focus element visible in some way
      box-shadow: 0 1rem 2rem rgba($color-black, $alpha: 0.1);
      border-bottom: 3px solid $color-primary;

      &:invalid {
        border-bottom: 3px solid $color-secondary-dark;
      }
    }

    &::-webkit-input-placeholder {
      color: $color-grey-2;
    }
  }

  &__label {
    display: block;
    font-size: 1.2rem;
    font-weight: 700;
    margin-left: 2rem;
    margin-top: 0.7rem;
    transition: all 0.3s;
  }

  //style the label which is an adjacent sibling of input
  &__input:placeholder-shown + &__label {
    opacity: 0;
    visibility: hidden; //cant animate visibility so we need opacity
    transform: translateY(-4rem);
  }

  &__radio-group {
    width: 48%;
    display: inline-block;

    &:last-child {
      margin-bottom: 2rem;
    }

    @include responsive(tab-portrait) {
      width: 100%;
      margin-bottom: 2rem;
    }
  }

  &__radio-input {
    display: none;
  }

  &__radio-label {
    position: relative;
    font-size: $default-size;
    cursor: pointer;
    padding-left: 4rem;
  }

  &__radio-btn {
    height: 3rem;
    width: 3rem;
    display: inline-block;
    position: absolute;
    border: 5px solid $color-primary;
    border-radius: 50%;
    left: 0;
    top: -0.7rem;

    &::after {
      display: block;
      content: "";
      height: 1.2rem;
      width: 1.2rem;
      border-radius: 50%;
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      background-color: $color-primary;
      opacity: 0;
      transition: opacity 0.2s;
    }
  }

  //checking radio input / select sibling of it and its child from the sibling
  &__radio-input:checked ~ &__radio-label &__radio-btn::after {
    opacity: 1;
  }
}
